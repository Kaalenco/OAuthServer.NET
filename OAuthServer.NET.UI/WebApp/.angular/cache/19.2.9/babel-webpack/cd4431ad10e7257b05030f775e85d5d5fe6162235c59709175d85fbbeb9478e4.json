{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, Input } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material';\nimport { ConfirmationmodalComponent } from 'src/app';\nimport { BaseComponent } from 'src/app/base.component';\nimport { ClientcorsoriginmodalComponent } from '../modals/clientcorsoriginmodal/clientcorsoriginmodal.component';\nlet ClientcorsoriginsComponent = class ClientcorsoriginsComponent extends BaseComponent {\n  constructor(store, http, matDialog) {\n    super(store, http, matDialog);\n    this.store = store;\n    this.http = http;\n    this.matDialog = matDialog;\n    this.displayedColumns = ['originURI', 'editCORSOrigin', 'deleteCORSOrigin'];\n    this.dataSource = new MatTableDataSource();\n  }\n  assignCORSOrigins(clientCORSOrigins) {\n    super.assignCORSOrigins(clientCORSOrigins);\n    const selectedCORSOrigins = clientCORSOrigins.filter(x => x.clientId === this.clientId);\n    this.dataSource.data = selectedCORSOrigins;\n  }\n  addCORSOrigin() {\n    const clientCORSModalData = {\n      isConfirmed: false,\n      originURI: undefined,\n      existingCORSOrigins: this.clientsCORSOrigins.filter(x => x.clientId === this.clientId),\n      isCreate: true\n    };\n    const clientCORSOriginCreateModal = this.matDialog.open(ClientcorsoriginmodalComponent, {\n      width: '250px',\n      data: clientCORSModalData\n    });\n    clientCORSOriginCreateModal.afterClosed().subscribe(result => {\n      if (result !== undefined) {\n        const request = {\n          clientId: this.clientId,\n          originURI: result.originURI\n        };\n        this.http.createClientCORSOrigin(request);\n      }\n    });\n  }\n  editCORSOrigin(originURI) {\n    const selectedCORSOrigins = this.clientsCORSOrigins.filter(x => x.clientId === this.clientId);\n    const selectedCORSOrigin = selectedCORSOrigins.find(x => x.originURI === originURI);\n    const clientCORSModalData = {\n      isConfirmed: false,\n      originURI: selectedCORSOrigin.originURI,\n      existingCORSOrigins: selectedCORSOrigins,\n      isCreate: false\n    };\n    const clientCORSEditModal = this.matDialog.open(ClientcorsoriginmodalComponent, {\n      width: '250px',\n      data: clientCORSModalData\n    });\n    clientCORSEditModal.afterClosed().subscribe(result => {\n      if (result !== undefined) {\n        const request = {\n          originURI: result.originURI,\n          id: selectedCORSOrigin.id,\n          clientId: this.clientId\n        };\n        this.http.updateClientCORSOrigin(request);\n      }\n    });\n  }\n  deleteCORSOrigin(originURI) {\n    const selectedCORSOrigins = this.clientsCORSOrigins.filter(x => x.clientId === this.clientId);\n    const selectedOrigin = selectedCORSOrigins.find(x => x.originURI === originURI);\n    const confirmationModalData = {\n      isConfirmed: false,\n      title: 'Confirm Delete',\n      message: `Are you sure you would like to delete the CORS Origin ${originURI}?`,\n      cancelMessage: 'Cancel',\n      confirmMessage: 'Confirm'\n    };\n    const confirmationModal = this.matDialog.open(ConfirmationmodalComponent, {\n      width: '250px',\n      data: confirmationModalData\n    });\n    confirmationModal.afterClosed().subscribe(result => {\n      if (result !== undefined) {\n        this.http.removeClientCORSOrigin(selectedOrigin.id);\n      }\n    });\n  }\n};\n__decorate([Input()], ClientcorsoriginsComponent.prototype, \"clientId\", void 0);\nClientcorsoriginsComponent = __decorate([Component({\n  selector: 'app-clientcorsorigins',\n  templateUrl: './clientcorsorigins.component.html',\n  styleUrls: ['./clientcorsorigins.component.scss']\n})], ClientcorsoriginsComponent);\nexport { ClientcorsoriginsComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}