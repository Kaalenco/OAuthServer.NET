{"ast":null,"code":"import { MatTableDataSource } from '@angular/material/table';\nimport { ConfirmationmodalComponent } from 'src/app';\nimport { BaseComponent } from 'src/app/base.component';\nimport { ClientredirecturimodalComponent } from '../modals/clientredirecturimodal/clientredirecturimodal.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"src/app\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"@angular/material/button\";\nimport * as i5 from \"@angular/material/table\";\nfunction ClientredirecturisComponent_th_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 10);\n    i0.ɵɵtext(1, \"Redirect URI\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ClientredirecturisComponent_td_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r1 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", element_r1.redirectURI, \" \");\n  }\n}\nfunction ClientredirecturisComponent_th_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 10);\n    i0.ɵɵtext(1, \"Edit\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ClientredirecturisComponent_td_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\", 11)(1, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function ClientredirecturisComponent_td_10_Template_button_click_1_listener() {\n      const element_r3 = i0.ɵɵrestoreView(_r2).$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.editRedirectURI(element_r3.redirectURI));\n    });\n    i0.ɵɵtext(2, \" Edit \");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction ClientredirecturisComponent_th_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 10);\n    i0.ɵɵtext(1, \"Delete\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ClientredirecturisComponent_td_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\", 11)(1, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function ClientredirecturisComponent_td_13_Template_button_click_1_listener() {\n      const element_r6 = i0.ɵɵrestoreView(_r5).$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.deleteRedirectURI(element_r6.redirectURI));\n    });\n    i0.ɵɵtext(2, \" Delete \");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction ClientredirecturisComponent_tr_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 13);\n  }\n}\nfunction ClientredirecturisComponent_tr_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 14);\n  }\n}\nexport let ClientredirecturisComponent = /*#__PURE__*/(() => {\n  class ClientredirecturisComponent extends BaseComponent {\n    store;\n    http;\n    matDialog;\n    clientId;\n    displayedColumns = ['redirectURI', 'editRedirectURI', 'deleteRedirectURI'];\n    dataSource = (() => new MatTableDataSource())();\n    constructor(store, http, matDialog) {\n      super(store, http, matDialog);\n      this.store = store;\n      this.http = http;\n      this.matDialog = matDialog;\n    }\n    assignRedirectURIs(redirectURIs) {\n      super.assignRedirectURIs(redirectURIs);\n      const selectedClientRedirectURIs = redirectURIs.filter(x => x.clientId === this.clientId);\n      this.dataSource.data = selectedClientRedirectURIs;\n    }\n    addRedirectURI() {\n      const clientRedirectModalData = {\n        isConfirmed: false,\n        redirectURI: undefined,\n        existingRedirectURIs: this.clientsRedirectURIs.filter(x => x.clientId === this.clientId),\n        isCreate: true\n      };\n      const clientRedirectCreateModal = this.matDialog.open(ClientredirecturimodalComponent, {\n        width: '250px',\n        data: clientRedirectModalData\n      });\n      clientRedirectCreateModal.afterClosed().subscribe(result => {\n        if (result !== undefined) {\n          const request = {\n            clientId: this.clientId,\n            redirectURI: result.redirectURI\n          };\n          this.http.createClientRedirectURI(request);\n        }\n      });\n    }\n    editRedirectURI(redirectURI) {\n      const selectedClientRedirectURIs = this.clientsRedirectURIs.filter(x => x.clientId === this.clientId);\n      const selectedRedirectURI = selectedClientRedirectURIs.find(x => x.redirectURI === redirectURI);\n      const clientRedirectModalData = {\n        isConfirmed: false,\n        redirectURI: selectedRedirectURI.redirectURI,\n        existingRedirectURIs: selectedClientRedirectURIs,\n        isCreate: false\n      };\n      const clientRedirectURIEditModal = this.matDialog.open(ClientredirecturimodalComponent, {\n        width: '250px',\n        data: clientRedirectModalData\n      });\n      clientRedirectURIEditModal.afterClosed().subscribe(result => {\n        if (result !== undefined) {\n          const request = {\n            redirectURI: result.redirectURI,\n            id: selectedRedirectURI.id,\n            clientId: this.clientId\n          };\n          this.http.updateClientRedirectURI(request);\n        }\n      });\n    }\n    deleteRedirectURI(redirectURI) {\n      const selectedClientRedirectURIs = this.clientsRedirectURIs.filter(x => x.clientId === this.clientId);\n      const selectedRedirectURI = selectedClientRedirectURIs.find(x => x.redirectURI === redirectURI);\n      const confirmationModalData = {\n        isConfirmed: false,\n        title: 'Confirm Delete',\n        message: `Are you sure you would like to delete the Redirect URI ${redirectURI}?`,\n        cancelMessage: 'Cancel',\n        confirmMessage: 'Confirm'\n      };\n      const confirmationModal = this.matDialog.open(ConfirmationmodalComponent, {\n        width: '250px',\n        data: confirmationModalData\n      });\n      confirmationModal.afterClosed().subscribe(result => {\n        if (result !== undefined) {\n          this.http.removeClientRedirectURI(selectedRedirectURI.id);\n        }\n      });\n    }\n    static ɵfac = function ClientredirecturisComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ClientredirecturisComponent)(i0.ɵɵdirectiveInject(i1.Store), i0.ɵɵdirectiveInject(i2.HttpService), i0.ɵɵdirectiveInject(i3.MatDialog));\n    };\n    static ɵcmp = (() => /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ClientredirecturisComponent,\n      selectors: [[\"app-clientredirecturis\"]],\n      inputs: {\n        clientId: \"clientId\"\n      },\n      features: [i0.ɵɵInheritDefinitionFeature],\n      decls: 16,\n      vars: 3,\n      consts: [[1, \"mat-h2\"], [\"mat-stroked-button\", \"\", \"color\", \"primary\", \"appearance\", \"outlined\", 3, \"click\"], [\"mat-table\", \"\", 1, \"mat-elevation-z8\", 3, \"dataSource\"], [\"matColumnDef\", \"redirectURI\"], [\"mat-header-cell\", \"\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 4, \"matCellDef\"], [\"matColumnDef\", \"editRedirectURI\"], [\"matColumnDef\", \"deleteRedirectURI\"], [\"mat-header-row\", \"\", 4, \"matHeaderRowDef\"], [\"mat-row\", \"\", 4, \"matRowDef\", \"matRowDefColumns\"], [\"mat-header-cell\", \"\"], [\"mat-cell\", \"\"], [\"mat-primary\", \"\", \"color\", \"primary\", \"type\", \"button\", \"mat-stroked-button\", \"\", 3, \"click\"], [\"mat-header-row\", \"\"], [\"mat-row\", \"\"]],\n      template: function ClientredirecturisComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"p\", 0);\n          i0.ɵɵtext(1, \"Client Redirect URIs\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"button\", 1);\n          i0.ɵɵlistener(\"click\", function ClientredirecturisComponent_Template_button_click_2_listener() {\n            return ctx.addRedirectURI();\n          });\n          i0.ɵɵtext(3, \" Add Redirect URI\\n\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"table\", 2);\n          i0.ɵɵelementContainerStart(5, 3);\n          i0.ɵɵtemplate(6, ClientredirecturisComponent_th_6_Template, 2, 0, \"th\", 4)(7, ClientredirecturisComponent_td_7_Template, 2, 1, \"td\", 5);\n          i0.ɵɵelementContainerEnd();\n          i0.ɵɵelementContainerStart(8, 6);\n          i0.ɵɵtemplate(9, ClientredirecturisComponent_th_9_Template, 2, 0, \"th\", 4)(10, ClientredirecturisComponent_td_10_Template, 3, 0, \"td\", 5);\n          i0.ɵɵelementContainerEnd();\n          i0.ɵɵelementContainerStart(11, 7);\n          i0.ɵɵtemplate(12, ClientredirecturisComponent_th_12_Template, 2, 0, \"th\", 4)(13, ClientredirecturisComponent_td_13_Template, 3, 0, \"td\", 5);\n          i0.ɵɵelementContainerEnd();\n          i0.ɵɵtemplate(14, ClientredirecturisComponent_tr_14_Template, 1, 0, \"tr\", 8)(15, ClientredirecturisComponent_tr_15_Template, 1, 0, \"tr\", 9);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"dataSource\", ctx.dataSource);\n          i0.ɵɵadvance(10);\n          i0.ɵɵproperty(\"matHeaderRowDef\", ctx.displayedColumns);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"matRowDefColumns\", ctx.displayedColumns);\n        }\n      },\n      dependencies: [i4.MatButton, i5.MatTable, i5.MatHeaderCellDef, i5.MatHeaderRowDef, i5.MatColumnDef, i5.MatCellDef, i5.MatRowDef, i5.MatHeaderCell, i5.MatCell, i5.MatHeaderRow, i5.MatRow],\n      styles: [\".mat-column-redirectURI[_ngcontent-%COMP%], .mat-column-editRedirectURI[_ngcontent-%COMP%], .mat-column-deleteRedirectURI[_ngcontent-%COMP%]{padding:0 5px}\"]\n    }))();\n  }\n  return ClientredirecturisComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}