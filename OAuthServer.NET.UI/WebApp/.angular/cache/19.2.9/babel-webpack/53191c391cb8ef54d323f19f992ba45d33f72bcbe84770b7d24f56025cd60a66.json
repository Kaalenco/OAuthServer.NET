{"ast":null,"code":"import { __decorate, __param } from \"tslib\";\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ConfirmationmodalComponent } from 'src/app';\nimport { BaseComponent } from 'src/app/base.component';\nimport { ClientscopemodalComponent } from '../modals/clientscopemodal/clientscopemodal.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"src/app\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"@angular/material/button\";\nimport * as i5 from \"@angular/material/table\";\nfunction ClientscopesComponent_th_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 10);\n    i0.ɵɵtext(1, \"Scope Name\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ClientscopesComponent_td_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r1 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", element_r1.scopeName, \" \");\n  }\n}\nfunction ClientscopesComponent_th_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 10);\n    i0.ɵɵtext(1, \"Edit\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ClientscopesComponent_td_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\", 11)(1, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function ClientscopesComponent_td_10_Template_button_click_1_listener() {\n      const element_r3 = i0.ɵɵrestoreView(_r2).$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.editScope(element_r3.scopeName));\n    });\n    i0.ɵɵtext(2, \" Edit \");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction ClientscopesComponent_th_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 10);\n    i0.ɵɵtext(1, \"Delete\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ClientscopesComponent_td_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\", 11)(1, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function ClientscopesComponent_td_13_Template_button_click_1_listener() {\n      const element_r6 = i0.ɵɵrestoreView(_r5).$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.deleteScope(element_r6.scopeName));\n    });\n    i0.ɵɵtext(2, \" Delete \");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction ClientscopesComponent_tr_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 13);\n  }\n}\nfunction ClientscopesComponent_tr_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 14);\n  }\n}\nlet ClientscopesComponent = class ClientscopesComponent extends BaseComponent {\n  store;\n  http;\n  matDialog;\n  clientId;\n  displayedColumns = ['scopeName', 'editScope', 'deleteScope'];\n  dataSource = (() => new MatTableDataSource())();\n  constructor(store, http, matDialog) {\n    super(store, http, matDialog);\n    this.store = store;\n    this.http = http;\n    this.matDialog = matDialog;\n  }\n  assignScopes(clientScopes) {\n    super.assignScopes(clientScopes);\n    const selectedScopes = clientScopes.filter(x => x.clientId === this.clientId);\n    this.dataSource.data = selectedScopes;\n  }\n  addScope() {\n    const clientScopeModalData = {\n      isConfirmed: false,\n      scopeName: undefined,\n      existingScopes: this.clientsScopes.filter(x => x.clientId === this.clientId),\n      isCreate: true\n    };\n    const clientScopeCreateModal = this.matDialog.open(ClientscopemodalComponent, {\n      width: '250px',\n      data: clientScopeModalData\n    });\n    clientScopeCreateModal.afterClosed().subscribe(result => {\n      if (result !== undefined) {\n        const scope = {\n          clientId: this.clientId,\n          scopeName: result.scopeName\n        };\n        this.http.createClientScope(scope);\n      }\n    });\n  }\n  editScope(scopeName) {\n    const selectedScopes = this.clientsScopes.filter(x => x.clientId === this.clientId);\n    const selectedScope = selectedScopes.find(x => x.scopeName === scopeName);\n    const clientScopeModalData = {\n      isConfirmed: false,\n      scopeName: selectedScope.scopeName,\n      existingScopes: selectedScopes,\n      isCreate: false\n    };\n    const clientScopeEditModal = this.matDialog.open(ClientscopemodalComponent, {\n      width: '250px',\n      data: clientScopeModalData\n    });\n    clientScopeEditModal.afterClosed().subscribe(result => {\n      if (result !== undefined) {\n        const request = {\n          scopeName: result.scopeName,\n          id: selectedScope.id,\n          clientId: this.clientId\n        };\n        this.http.updateClientScope(request);\n      }\n    });\n  }\n  deleteScope(scopeName) {\n    const selectedScopes = this.clientsScopes.filter(x => x.clientId === this.clientId);\n    const selectedScope = selectedScopes.find(x => x.scopeName === scopeName);\n    const confirmationModalData = {\n      isConfirmed: false,\n      title: 'Confirm Delete',\n      message: `Are you sure you would like to delete the scope ${scopeName}?`,\n      cancelMessage: 'Cancel',\n      confirmMessage: 'Confirm'\n    };\n    const confirmationModal = this.matDialog.open(ConfirmationmodalComponent, {\n      width: '250px',\n      data: confirmationModalData\n    });\n    confirmationModal.afterClosed().subscribe(result => {\n      if (result !== undefined) {\n        this.http.removeClientScope(selectedScope.id);\n      }\n    });\n  }\n  static ɵfac = function ClientscopesComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || ClientscopesComponent)(i0.ɵɵdirectiveInject(i1.Store), i0.ɵɵdirectiveInject(i2.HttpService), i0.ɵɵdirectiveInject(i3.MatDialog));\n  };\n  static ɵcmp = (() => /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ClientscopesComponent,\n    selectors: [[\"app-clientscopes\"]],\n    inputs: {\n      clientId: \"clientId\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 16,\n    vars: 3,\n    consts: [[1, \"mat-h2\"], [\"mat-stroked-button\", \"\", \"color\", \"primary\", \"appearance\", \"outlined\", 3, \"click\"], [\"mat-table\", \"\", 1, \"mat-elevation-z8\", 3, \"dataSource\"], [\"matColumnDef\", \"scopeName\"], [\"mat-header-cell\", \"\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 4, \"matCellDef\"], [\"matColumnDef\", \"editScope\"], [\"matColumnDef\", \"deleteScope\"], [\"mat-header-row\", \"\", 4, \"matHeaderRowDef\"], [\"mat-row\", \"\", 4, \"matRowDef\", \"matRowDefColumns\"], [\"mat-header-cell\", \"\"], [\"mat-cell\", \"\"], [\"mat-primary\", \"\", \"color\", \"primary\", \"type\", \"button\", \"mat-stroked-button\", \"\", 3, \"click\"], [\"mat-header-row\", \"\"], [\"mat-row\", \"\"]],\n    template: function ClientscopesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\", 0);\n        i0.ɵɵtext(1, \"Client Scopes\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function ClientscopesComponent_Template_button_click_2_listener() {\n          return ctx.addScope();\n        });\n        i0.ɵɵtext(3, \" Add Scope\\n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"table\", 2);\n        i0.ɵɵelementContainerStart(5, 3);\n        i0.ɵɵtemplate(6, ClientscopesComponent_th_6_Template, 2, 0, \"th\", 4)(7, ClientscopesComponent_td_7_Template, 2, 1, \"td\", 5);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(8, 6);\n        i0.ɵɵtemplate(9, ClientscopesComponent_th_9_Template, 2, 0, \"th\", 4)(10, ClientscopesComponent_td_10_Template, 3, 0, \"td\", 5);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(11, 7);\n        i0.ɵɵtemplate(12, ClientscopesComponent_th_12_Template, 2, 0, \"th\", 4)(13, ClientscopesComponent_td_13_Template, 3, 0, \"td\", 5);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵtemplate(14, ClientscopesComponent_tr_14_Template, 1, 0, \"tr\", 8)(15, ClientscopesComponent_tr_15_Template, 1, 0, \"tr\", 9);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"dataSource\", ctx.dataSource);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"matHeaderRowDef\", ctx.displayedColumns);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"matRowDefColumns\", ctx.displayedColumns);\n      }\n    },\n    dependencies: [i4.MatButton, i5.MatTable, i5.MatHeaderCellDef, i5.MatHeaderRowDef, i5.MatColumnDef, i5.MatCellDef, i5.MatRowDef, i5.MatHeaderCell, i5.MatCell, i5.MatHeaderRow, i5.MatRow],\n    styles: [\".mat-column-scopeName[_ngcontent-%COMP%], .mat-column-editScope[_ngcontent-%COMP%], .mat-column-deleteScope[_ngcontent-%COMP%]{padding:0 5px}\"]\n  }))();\n};\nClientscopesComponent = __decorate([__param(2, Inject(MatDialog))], ClientscopesComponent);\nexport { ClientscopesComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}