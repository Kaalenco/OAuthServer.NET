{"ast":null,"code":"import { BaseIdComponent } from 'src/app/baseId.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"src/app/services/http.service\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"src/app/services/cache.service\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/material/button\";\nimport * as i8 from \"@angular/material/card\";\nimport * as i9 from \"@angular/material/checkbox\";\nimport * as i10 from \"@angular/material/input\";\nimport * as i11 from \"@angular/forms\";\nconst _c0 = () => [\"/\"];\nfunction ClientauthorizationcodeComponent_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 15);\n    i0.ɵɵtext(1, \"Edit Client Authorization Code\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ClientauthorizationcodeComponent_p_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 15);\n    i0.ɵɵtext(1, \"Create Client Authorization Code\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ClientauthorizationcodeComponent_mat_checkbox_22_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-checkbox\", 9);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function ClientauthorizationcodeComponent_mat_checkbox_22_Template_mat_checkbox_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r1.allowRememberLogin, $event) || (ctx_r1.allowRememberLogin = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵtext(1, \"Allow Remember Login?\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r1.allowRememberLogin);\n  }\n}\nfunction ClientauthorizationcodeComponent_mat_form_field_27_input_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"input\", 17);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function ClientauthorizationcodeComponent_mat_form_field_27_input_1_Template_input_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      i0.ɵɵtwoWayBindingSet(ctx_r1.refreshTokenExpirationDays, $event) || (ctx_r1.refreshTokenExpirationDays = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r1.refreshTokenExpirationDays);\n  }\n}\nfunction ClientauthorizationcodeComponent_mat_form_field_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-form-field\");\n    i0.ɵɵtemplate(1, ClientauthorizationcodeComponent_mat_form_field_27_input_1_Template, 1, 1, \"input\", 16);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.issueRefreshTokens);\n  }\n}\nfunction ClientauthorizationcodeComponent_div_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵelement(1, \"app-clientscopes\", 19)(2, \"app-clientcorsorigins\", 19)(3, \"app-clientredirecturis\", 19)(4, \"app-clientpostlogoutredirecturis\", 19);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"clientId\", ctx_r1.id);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"clientId\", ctx_r1.id);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"clientId\", ctx_r1.id);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"clientId\", ctx_r1.id);\n  }\n}\nfunction ClientauthorizationcodeComponent_button_40_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function ClientauthorizationcodeComponent_button_40_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.createClient());\n    });\n    i0.ɵɵtext(1, \" Create \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ClientauthorizationcodeComponent_button_41_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function ClientauthorizationcodeComponent_button_41_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.createClient());\n    });\n    i0.ɵɵtext(1, \" Update \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let ClientauthorizationcodeComponent = /*#__PURE__*/(() => {\n  class ClientauthorizationcodeComponent extends BaseIdComponent {\n    store;\n    http;\n    matDialog;\n    route;\n    router;\n    cacheService;\n    grantId;\n    clientName;\n    clientId;\n    clientSecret;\n    tokenExpirationMin;\n    issuerURI;\n    audience;\n    allowRememberLogin = true;\n    enableExternalLogin = true;\n    enableLocalLogin = true;\n    validateIssuer = true;\n    validateAudience = true;\n    validateCORS = true;\n    validateSigningKey = true;\n    issueRefreshTokens = true;\n    refreshTokenExpirationDays = 7;\n    constructor(store, http, matDialog, route, router, cacheService) {\n      super(store, http, matDialog, route);\n      this.store = store;\n      this.http = http;\n      this.matDialog = matDialog;\n      this.route = route;\n      this.router = router;\n      this.cacheService = cacheService;\n      this.grantId = cacheService.getGrantId();\n    }\n    assignClients(clients) {\n      super.assignClients(clients);\n      let client = this.clients.find(x => x.id == this.id);\n      if (!client) {\n        client = this.clients.find(x => x.clientName === this.clientName);\n      }\n      if (client) {\n        this.id = client.id;\n        this.grantId = client.grantId;\n        this.clientName = client.clientName;\n        this.clientId = client.clientId;\n        this.clientSecret = client.clientSecret;\n        this.tokenExpirationMin = client.tokenExpirationMin;\n        this.issuerURI = client.issuerURI;\n        this.audience = client.audience;\n        this.allowRememberLogin = client.allowRememberLogin;\n        this.enableExternalLogin = client.enableExternalLogin;\n        this.enableLocalLogin = client.enableLocalLogin;\n        this.validateIssuer = client.validateIssuer;\n        this.validateAudience = client.validateAudience;\n        this.validateCORS = client.validateCORS;\n        this.validateSigningKey = client.validateIssuerSigningKey;\n        this.issueRefreshTokens = client.issueRefreshTokens;\n        this.refreshTokenExpirationDays = client.refreshTokenExpirationDays;\n      }\n    }\n    createClient() {\n      // Todo: Validate all data is correct\n      if (this.id && this.id !== '') {\n        const request = {\n          allowRememberLogin: this.allowRememberLogin,\n          enableLocalLogin: this.enableLocalLogin,\n          enableExternalLogin: this.enableExternalLogin,\n          validateAudience: this.validateAudience,\n          validateCORS: this.validateCORS,\n          validateIssuer: this.validateIssuer,\n          clientId: this.clientId,\n          clientName: this.clientName,\n          grantId: this.grantId,\n          tokenExpirationMin: this.tokenExpirationMin,\n          issuerURI: this.issuerURI,\n          audience: this.audience,\n          id: this.id,\n          clientSecret: this.clientSecret,\n          issueRefreshTokens: this.issueRefreshTokens,\n          refreshTokenExpirationDays: this.refreshTokenExpirationDays,\n          validateIssuerSigningKey: this.validateSigningKey\n        };\n        this.http.updateClientAuthorizationCode(request);\n        this.router.navigate(['/']);\n      } else {\n        const request = {\n          allowRememberLogin: this.allowRememberLogin,\n          enableLocalLogin: this.enableLocalLogin,\n          enableExternalLogin: this.enableExternalLogin,\n          validateAudience: this.validateAudience,\n          validateCORS: this.validateCORS,\n          validateIssuer: this.validateIssuer,\n          clientId: this.clientId,\n          clientName: this.clientName,\n          grantId: this.grantId,\n          tokenExpirationMin: this.tokenExpirationMin,\n          issuerURI: this.issuerURI,\n          audience: this.audience,\n          clientSecret: this.clientSecret,\n          issueRefreshTokens: this.issueRefreshTokens,\n          refreshTokenExpirationDays: this.refreshTokenExpirationDays,\n          validateIssuerSigningKey: this.validateSigningKey\n        };\n        this.http.createClientAuthorizationCode(request);\n      }\n    }\n    static ɵfac = function ClientauthorizationcodeComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ClientauthorizationcodeComponent)(i0.ɵɵdirectiveInject(i1.Store), i0.ɵɵdirectiveInject(i2.HttpService), i0.ɵɵdirectiveInject(i3.MatDialog), i0.ɵɵdirectiveInject(i4.ActivatedRoute), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i5.CacheService));\n    };\n    static ɵcmp = (() => /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ClientauthorizationcodeComponent,\n      selectors: [[\"app-clientauthorizationcode\"]],\n      features: [i0.ɵɵInheritDefinitionFeature],\n      decls: 42,\n      vars: 22,\n      consts: [[1, \"clientauthorizationcode-card\"], [\"class\", \"mat-h1\", 4, \"ngIf\"], [1, \"flex-vertical-container\"], [\"matInput\", \"\", \"id\", \"clientName\", \"placeholder\", \"Client Name\", \"name\", \"clientName\", \"required\", \"\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"matInput\", \"\", \"id\", \"clientId\", \"placeholder\", \"client_id\", \"name\", \"clientId\", \"required\", \"\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"matInput\", \"\", \"id\", \"clientSecret\", \"placeholder\", \"client_secret\", \"name\", \"clientSecret\", \"required\", \"\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"matInput\", \"\", \"id\", \"tokenExpirationMin\", \"placeholder\", \"Token Expiration (Min)\", \"name\", \"tokenExpirationMin\", \"required\", \"\", \"type\", \"number\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"matInput\", \"\", \"id\", \"issuerURI\", \"placeholder\", \"IssuerURI\", \"name\", \"issuerURI\", \"required\", \"\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"matInput\", \"\", \"id\", \"audience\", \"placeholder\", \"Audience\", \"name\", \"audience\", \"required\", \"\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [3, \"ngModelChange\", \"ngModel\"], [3, \"ngModel\", \"ngModelChange\", 4, \"ngIf\"], [4, \"ngIf\"], [\"class\", \"flex-horizontal-container\", 4, \"ngIf\"], [\"mat-stroked-button\", \"\", \"color\", \"primary\", \"appearance\", \"outlined\", 3, \"routerLink\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"appearance\", \"raised\", 3, \"click\", 4, \"ngIf\"], [1, \"mat-h1\"], [\"matInput\", \"\", \"class\", \"form-control\", \"id\", \"refreshTokenExpirationDays\", \"placeholder\", \"Refresh Token Expiration (Days)?\", \"name\", \"refreshTokenExpirationDays\", \"type\", \"number\", 3, \"ngModel\", \"ngModelChange\", 4, \"ngIf\"], [\"matInput\", \"\", \"id\", \"refreshTokenExpirationDays\", \"placeholder\", \"Refresh Token Expiration (Days)?\", \"name\", \"refreshTokenExpirationDays\", \"type\", \"number\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [1, \"flex-horizontal-container\"], [3, \"clientId\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"appearance\", \"raised\", 3, \"click\"]],\n      template: function ClientauthorizationcodeComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"mat-card\", 0)(1, \"mat-card-title\");\n          i0.ɵɵtemplate(2, ClientauthorizationcodeComponent_p_2_Template, 2, 0, \"p\", 1)(3, ClientauthorizationcodeComponent_p_3_Template, 2, 0, \"p\", 1);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"mat-card-content\")(5, \"div\", 2)(6, \"mat-form-field\")(7, \"mat-label\");\n          i0.ɵɵtext(8, \"Client Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"input\", 3);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function ClientauthorizationcodeComponent_Template_input_ngModelChange_9_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.clientName, $event) || (ctx.clientName = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(10, \"mat-form-field\")(11, \"input\", 4);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function ClientauthorizationcodeComponent_Template_input_ngModelChange_11_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.clientId, $event) || (ctx.clientId = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(12, \"mat-form-field\")(13, \"input\", 5);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function ClientauthorizationcodeComponent_Template_input_ngModelChange_13_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.clientSecret, $event) || (ctx.clientSecret = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(14, \"mat-form-field\")(15, \"input\", 6);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function ClientauthorizationcodeComponent_Template_input_ngModelChange_15_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.tokenExpirationMin, $event) || (ctx.tokenExpirationMin = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(16, \"mat-form-field\")(17, \"input\", 7);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function ClientauthorizationcodeComponent_Template_input_ngModelChange_17_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.issuerURI, $event) || (ctx.issuerURI = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(18, \"mat-form-field\")(19, \"input\", 8);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function ClientauthorizationcodeComponent_Template_input_ngModelChange_19_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.audience, $event) || (ctx.audience = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(20, \"mat-checkbox\", 9);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function ClientauthorizationcodeComponent_Template_mat_checkbox_ngModelChange_20_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.enableLocalLogin, $event) || (ctx.enableLocalLogin = $event);\n            return $event;\n          });\n          i0.ɵɵtext(21, \"Enable Local Login?\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(22, ClientauthorizationcodeComponent_mat_checkbox_22_Template, 2, 1, \"mat-checkbox\", 10);\n          i0.ɵɵelementStart(23, \"mat-checkbox\", 9);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function ClientauthorizationcodeComponent_Template_mat_checkbox_ngModelChange_23_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.enableExternalLogin, $event) || (ctx.enableExternalLogin = $event);\n            return $event;\n          });\n          i0.ɵɵtext(24, \"Enable External Login?\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(25, \"mat-checkbox\", 9);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function ClientauthorizationcodeComponent_Template_mat_checkbox_ngModelChange_25_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.issueRefreshTokens, $event) || (ctx.issueRefreshTokens = $event);\n            return $event;\n          });\n          i0.ɵɵtext(26, \"Issue Refresh Tokens?\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(27, ClientauthorizationcodeComponent_mat_form_field_27_Template, 2, 1, \"mat-form-field\", 11);\n          i0.ɵɵelementStart(28, \"mat-checkbox\", 9);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function ClientauthorizationcodeComponent_Template_mat_checkbox_ngModelChange_28_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.validateSigningKey, $event) || (ctx.validateSigningKey = $event);\n            return $event;\n          });\n          i0.ɵɵtext(29, \"Validate Signing Key?\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(30, \"mat-checkbox\", 9);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function ClientauthorizationcodeComponent_Template_mat_checkbox_ngModelChange_30_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.validateIssuer, $event) || (ctx.validateIssuer = $event);\n            return $event;\n          });\n          i0.ɵɵtext(31, \"Validate Issuer?\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(32, \"mat-checkbox\", 9);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function ClientauthorizationcodeComponent_Template_mat_checkbox_ngModelChange_32_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.validateAudience, $event) || (ctx.validateAudience = $event);\n            return $event;\n          });\n          i0.ɵɵtext(33, \"Validate Audience?\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(34, \"mat-checkbox\", 9);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function ClientauthorizationcodeComponent_Template_mat_checkbox_ngModelChange_34_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.validateCORS, $event) || (ctx.validateCORS = $event);\n            return $event;\n          });\n          i0.ɵɵtext(35, \"Validate CORS?\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(36, ClientauthorizationcodeComponent_div_36_Template, 5, 4, \"div\", 12);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(37, \"mat-card-actions\")(38, \"button\", 13);\n          i0.ɵɵtext(39, \" Back \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(40, ClientauthorizationcodeComponent_button_40_Template, 2, 0, \"button\", 14)(41, ClientauthorizationcodeComponent_button_41_Template, 2, 0, \"button\", 14);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.id && ctx.id !== \"\");\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", !ctx.id || ctx.id === \"\");\n          i0.ɵɵadvance(6);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.clientName);\n          i0.ɵɵadvance(2);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.clientId);\n          i0.ɵɵadvance(2);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.clientSecret);\n          i0.ɵɵadvance(2);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.tokenExpirationMin);\n          i0.ɵɵadvance(2);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.issuerURI);\n          i0.ɵɵadvance(2);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.audience);\n          i0.ɵɵadvance();\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.enableLocalLogin);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.enableLocalLogin);\n          i0.ɵɵadvance();\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.enableExternalLogin);\n          i0.ɵɵadvance(2);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.issueRefreshTokens);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.issueRefreshTokens);\n          i0.ɵɵadvance();\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.validateSigningKey);\n          i0.ɵɵadvance(2);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.validateIssuer);\n          i0.ɵɵadvance(2);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.validateAudience);\n          i0.ɵɵadvance(2);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.validateCORS);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.id && ctx.id !== \"\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(21, _c0));\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", !ctx.id || ctx.id === \"\");\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.id && ctx.id !== \"\");\n        }\n      },\n      dependencies: [i6.NgIf, i4.RouterLink, i7.MatButton, i8.MatCard, i8.MatCardActions, i8.MatCardContent, i8.MatCardTitle, i9.MatCheckbox, i10.MatInput, i10.MatFormField, i10.MatLabel, i11.DefaultValueAccessor, i11.NumberValueAccessor, i11.NgControlStatus, i11.RequiredValidator, i11.NgModel],\n      encapsulation: 2\n    }))();\n  }\n  return ClientauthorizationcodeComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}