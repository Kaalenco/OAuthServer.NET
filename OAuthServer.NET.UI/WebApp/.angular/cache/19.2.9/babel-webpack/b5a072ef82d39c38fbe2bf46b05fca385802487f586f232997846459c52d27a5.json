{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { BaseIdComponent } from '../../baseId.component';\nlet ClientimplicitComponent = class ClientimplicitComponent extends BaseIdComponent {\n  constructor(store, http, matDialog, route, router, cacheService) {\n    super(store, http, matDialog, route);\n    this.store = store;\n    this.http = http;\n    this.matDialog = matDialog;\n    this.route = route;\n    this.router = router;\n    this.cacheService = cacheService;\n    this.allowRememberLogin = true;\n    this.enableExternalLogin = true;\n    this.enableLocalLogin = true;\n    this.validateSigningKey = true;\n    this.validateIssuer = true;\n    this.validateAudience = true;\n    this.validateCORS = true;\n    this.grantId = cacheService.getGrantId();\n  }\n  assignClients(clients) {\n    super.assignClients(clients);\n    let client = this.clients.find(x => x.id == this.id);\n    if (!client) {\n      client = this.clients.find(x => x.clientName === this.clientName);\n    }\n    if (client) {\n      this.id = client.id;\n      this.grantId = client.grantId;\n      this.clientName = client.clientName;\n      this.clientId = client.clientId;\n      this.tokenExpirationMin = client.tokenExpirationMin;\n      this.issuerURI = client.issuerURI;\n      this.audience = client.audience;\n      this.allowRememberLogin = client.allowRememberLogin;\n      this.enableExternalLogin = client.enableExternalLogin;\n      this.enableLocalLogin = client.enableLocalLogin;\n      this.validateIssuer = client.validateIssuer;\n      this.validateAudience = client.validateAudience;\n      this.validateCORS = client.validateCORS;\n      this.validateSigningKey = client.validateIssuerSigningKey;\n      this.signingKey = client.clientSecret;\n    }\n  }\n  createClient() {\n    // Todo: Validate all data is correct\n    if (this.id && this.id !== '') {\n      const request = {\n        allowRememberLogin: this.allowRememberLogin,\n        enableLocalLogin: this.enableLocalLogin,\n        enableExternalLogin: this.enableExternalLogin,\n        validateAudience: this.validateAudience,\n        validateCORS: this.validateCORS,\n        validateIssuer: this.validateIssuer,\n        validateSigningKey: this.validateSigningKey,\n        signingKey: this.signingKey,\n        clientId: this.clientId,\n        clientName: this.clientName,\n        grantId: this.grantId,\n        tokenExpirationMin: this.tokenExpirationMin,\n        issuerURI: this.issuerURI,\n        audience: this.audience,\n        id: this.id\n      };\n      this.http.updateClientImplicit(request);\n      this.router.navigate(['/']);\n    } else {\n      const request = {\n        allowRememberLogin: this.allowRememberLogin,\n        enableLocalLogin: this.enableLocalLogin,\n        enableExternalLogin: this.enableExternalLogin,\n        validateAudience: this.validateAudience,\n        validateCORS: this.validateCORS,\n        validateIssuer: this.validateIssuer,\n        clientId: this.clientId,\n        clientName: this.clientName,\n        grantId: this.grantId,\n        tokenExpirationMin: this.tokenExpirationMin,\n        issuerURI: this.issuerURI,\n        audience: this.audience,\n        validateSigningKey: this.validateSigningKey,\n        signingKey: this.signingKey\n      };\n      this.http.createClientImplicit(request);\n    }\n  }\n};\nClientimplicitComponent = __decorate([Component({\n  selector: 'app-clientimplicit',\n  templateUrl: './clientimplicit.component.html',\n  styleUrls: ['./clientimplicit.component.scss']\n})], ClientimplicitComponent);\nexport { ClientimplicitComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}