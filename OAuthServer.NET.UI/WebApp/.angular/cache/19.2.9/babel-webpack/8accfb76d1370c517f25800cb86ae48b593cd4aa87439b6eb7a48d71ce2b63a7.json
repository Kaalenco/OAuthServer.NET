{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    _authenticationChanged = (() => new BehaviorSubject(false))();\n    token;\n    tokenExpiration;\n    constructor() {}\n    getToken() {\n      if (!this.isAuthenticated()) {\n        return '';\n      }\n      if (!this.token) {\n        return '';\n      }\n      return this.token.access_token;\n      //const json = JSON.parse(window.localStorage['token']);\n      //return json.access_token;\n    }\n    setToken(token) {\n      this.token = token;\n      //window.localStorage['token'] = JSON.stringify(token);\n      this.tokenExpiration = new Date();\n      this.tokenExpiration.setSeconds(new Date().getSeconds() + token.expires_in);\n      //window.localStorage['expirationdate'] = tokenExpiration;\n      this._authenticationChanged.next(this.isAuthenticated());\n    }\n    clearToken() {\n      this.token = undefined;\n      //window.localStorage['token'] = undefined;\n      this._authenticationChanged.next(this.isAuthenticated());\n    }\n    isAuthenticationChanged() {\n      return this._authenticationChanged.asObservable();\n    }\n    isAuthenticated() {\n      if (this.token !== undefined) {\n        console.log(this.tokenExpiration);\n        console.log(new Date());\n        console.log(this.tokenExpiration > new Date());\n        //this.tokenExpiration.getSeconds() > new Date().getSeconds());\n        return true;\n      }\n      //return (window.localStorage['token'] !== undefined &&\n      //  window.localStorage['token'] !== null &&\n      //  window.localStorage['token'] !== '' &&\n      //  window.localStorage['token'] !== 'undefined' &&\n      //  window.localStorage['token'] !== 'null' &&\n      //  Date.parse(window.localStorage['expirationdate']) > new Date().getSeconds());\n    }\n    static ɵfac = function AuthService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || AuthService)();\n    };\n    static ɵprov = (() => /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthService,\n      factory: AuthService.ɵfac,\n      providedIn: 'root'\n    }))();\n  }\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}