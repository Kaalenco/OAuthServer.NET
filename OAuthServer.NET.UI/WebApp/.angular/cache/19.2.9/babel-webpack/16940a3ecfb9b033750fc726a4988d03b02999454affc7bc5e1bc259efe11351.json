{"ast":null,"code":"export class BaseComponent {\n  constructor(store, httpService, matDialog) {\n    this.store = store;\n    this.httpService = httpService;\n    this.matDialog = matDialog;\n    this.grants = [];\n    this.clients = [];\n    this.clientsPostLogoutRedirectURIs = [];\n    this.clientsRedirectURIs = [];\n    this.clientsScopes = [];\n    this.clientsCORSOrigins = [];\n  }\n  ngOnInit() {\n    this.$grantsSubscription = this.store.select(x => x.grants).subscribe(grants => {\n      this.assignGrants(grants);\n    });\n    this.$clientsSubscription = this.store.select(x => x.clients).subscribe(clients => {\n      this.assignClients(clients);\n    });\n    this.$clientsPostLogoutRedirectURIsSubscription = this.store.select(x => x.clientsPostLogoutRedirectURIs).subscribe(clientsPostLogoutRedirectURIs => {\n      this.assignPostLogoutRedirectURIs(clientsPostLogoutRedirectURIs);\n    });\n    this.$clientsRedirectURIsSubscription = this.store.select(x => x.clientsRedirectURIs).subscribe(clientsRedirectURIs => {\n      this.assignRedirectURIs(clientsRedirectURIs);\n    });\n    this.$clientsScopesSubscription = this.store.select(x => x.clientsScopes).subscribe(clientScopes => {\n      this.assignScopes(clientScopes);\n    });\n    this.$clientsCORSOriginsSubscription = this.store.select(x => x.clientsCORSOrigins).subscribe(clientCORSOrigins => {\n      this.assignCORSOrigins(clientCORSOrigins);\n    });\n  }\n  assignGrants(grants) {\n    this.grants = grants;\n  }\n  assignClients(clients) {\n    this.clients = clients;\n  }\n  assignPostLogoutRedirectURIs(clientsPostLogoutRedirectURIs) {\n    this.clientsPostLogoutRedirectURIs = clientsPostLogoutRedirectURIs;\n  }\n  assignRedirectURIs(clientsRedirectURIs) {\n    this.clientsRedirectURIs = clientsRedirectURIs;\n  }\n  assignScopes(clientsScopes) {\n    this.clientsScopes = clientsScopes;\n  }\n  assignCORSOrigins(clientCORSOrigins) {\n    this.clientsCORSOrigins = clientCORSOrigins;\n  }\n  getGrant(grantId) {\n    return this.grants.find(x => x.id == grantId);\n  }\n  getClientsPostLogoutRedirectURIs(clientId) {\n    return this.clientsPostLogoutRedirectURIs.filter(x => x.clientId == clientId);\n  }\n  getClientsRedirectURIs(clientId) {\n    return this.clientsRedirectURIs.filter(x => x.clientId == clientId);\n  }\n  getNumberClientApplications(grantId) {\n    return this.clients.filter(x => x.grantId == grantId).length;\n  }\n  ngOnDestroy() {\n    this.$grantsSubscription.unsubscribe();\n    this.$clientsSubscription.unsubscribe();\n    this.$clientsPostLogoutRedirectURIsSubscription.unsubscribe();\n    this.$clientsRedirectURIsSubscription.unsubscribe();\n    this.$clientsScopesSubscription.unsubscribe();\n    this.$clientsCORSOriginsSubscription.unsubscribe();\n  }\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}